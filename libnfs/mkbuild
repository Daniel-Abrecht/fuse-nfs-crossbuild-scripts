#!/bin/bash

src=src
build=build
out=out
uri=https://github.com/sahlberg/libnfs.git
checkout=origin/master

root="$(realpath "$(dirname "$0")")"
parent="$(realpath "$root"/..)"

if [ -n "$LIBNFS_URI"      ]; then uri="$LIBNFS_URI"; fi
if [ -n "$LIBNFS_CHECKOUT" ]; then checkout="$LIBNFS_CHECKOUT"; fi

src="$root/$src"
build="$root/$build"
out="$root/$out"

function update {
  if [ ! -d "$src" ]
  then
    git clone --no-checkout -- "$uri" "$src"
    cd -- "$src"
  else
    cd -- "$src"
    git remote set-url origin "$uri"
    find -maxdepth 1 -not -name .git -not -name . -exec rm -rf {} \;
    git fetch
  fi
  git checkout "$checkout" >/dev/null
  git reset --hard;
  autoreconf --install
  cd -- "$root"
}

function compile {
  rm -rf -- "$build"
  mkdir -p -- "$build"
  cd -- "$build"
  chmod -w "$root"
  incs=( "${INCLUDES[@]/#/-I}" )
  libs=( "${LIBS[@]/\%ARCH\%/"$1"}" )
  libs=( "${libs[@]/#/-L}" )
  "$src"/configure --host="$1" CPPFLAGS="${incs[*]} $FLAGS" CFLAGS="${incs[*]} $FLAGS" LDFLAGS="${libs[*]}"
  make
  chmod u+w "$root"
  cd -- "$root"
  mkdir -p "$out/$1"
  cp "$build"/lib/.libs/libnfs.a "$out/$1"
}

set -ex

chmod u+w "$root"

rm -rf -- "$out"
mkdir -p -- "$out"

"$parent"/dokany/mkbuild update

update

compile "x86_64"

LIBS=( "$parent"/dokany/out/%ARCH%/ )
INCLUDES=( "$parent"/dokany/src/dokan_fuse/include/ )

compile "i686-w64-mingw32"
compile "x86_64-w64-mingw32"
